---
- name: Install required dependencies 
  package:
    name: "{{ debian_packages if ansible_facts['os_family'] == 'Debian' else redhat_packages }}"
    state: present

- name: Check if RVM is already installed
  shell: "bash -lc 'rvm --version'"
  register: rvm_check
  changed_when: false
  failed_when: false

- name: Debug RVM check result
  debug:
    msg: "RVM is already installed: {{ rvm_check.stdout }}"

- block :
  - name: Install RVM GPG keys
    shell: "curl -sSL {{ item }} | gpg2 --import -"
    loop: "{{ rvm_gpg_keys }}"
    register: gpg_import_results
    changed_when: false
    failed_when: "'error' in gpg_import_results.stdout"
  - name: Import RVM GPG keys
    shell: "gpg --keyserver hkp://keyserver.ubuntu.com --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB"
    register: gpg_key_import
    changed_when: "'imported' in gpg_key_import.stdout"
    failed_when: gpg_key_import.rc != 0
  - name: Debug GPG key import result
    debug:
      msg: "GPG keys imported successfully: {{ gpg_key_import.stdout }}"
  when: rvm_check.rc != 0

- block:
  - name: Install RVM (Ruby Version Manager)
    shell: "curl -sSL {{rvm_install_url}} | bash -s stable"
    register: rvm_install
    changed_when: "'RVM installation completed' in rvm_install.stdout"
    failed_when: rvm_install.rc != 0
    
  - name: Add RVM to the bash configuration file for the user
    lineinfile:
      path: "/home/{{ ansible_ssh_user }}/.bashrc"
      line: 'source /etc/profile.d/rvm.sh'
      state: present
    become_user: "{{ ansible_ssh_user }}"
  when: rvm_check.rc != 0


- name: Finally check rvm --version 
  shell: "bash -lc 'source .bashrc && rvm --version'"
  become_user: "{{ansible_ssh_user}}"
  register: rvm_version
  changed_when: false
  failed_when: false

- name: Debug the RVM installation version
  debug:
    msg: "RVM installed version: {{ rvm_version.stdout }}"

- name: Running rvm requirements 
  shell: "bash -lc 'rvm requirements '"
  register: rvm_requirements
  changed_when: false
  failed_when: false

- name: RVM requirements status
  debug:
    msg: "message : {{ rvm_requirements.stdout }}"